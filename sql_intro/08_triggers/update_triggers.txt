UPDATE Triggers
  Automatically update when UPDATE made to table
  Both NEW and OLD keywords can be used
  Both values are accessible when updating
  When trigger runs BEFORE, NEW can be updated but OLD cannot
  When trigger runs AFTER, only access OLD and NEW, no updates
  Update triggers cannot be made for views
  BEFORE UPDATE
    Validate data
    Make corrections
    Notify user before update
    Store new and old values for update log
  AFTER UPDATE
    Change log
    Update summary table

  // BEFORE UPDATE example
  // Create trigger on DigitalAssets to track changes to LastUpdatedOn

  CREATE TABLE DigitalActivity (
  RowID INT AUTO_INCREMENT PRIMARY KEY,
  ActorID INT NOT NULL,
  Detail VARCHAR(100) NOT NULL,
  UpdatedOn TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  );

  // Trigger
  // Performing 2 actions
  // Compare timestamp in UPDATE with existing one for record
    If less, then error
    Ignoring edge case where wrong value entered previously
  // INSERT to DigitalActivity table
    Check if NEW different than OLD

  DELIMITER **

  CREATE TRIGGER BeforeDigitalAssetUpdate
  BEFORE UPDATE
  ON DigitalAssets
  FOR EACH ROW
  BEGIN
  DECLARE errorMessage VARCHAR(255);

  IF NEW.LastUpdatedOn < OLD.LastUpdatedOn THEN
  SET errorMessage = CONCAT('The new value of LastUpatedOn column: ',
    NEW.LastUpdatedOn,' cannot be less than the current value: ',
    OLD.LastUpdatedOn);

  SIGNAL SQLSTATE '45000'
  SET MESSAGE_TEXT = errorMessage;
  END IF;

  IF NEW.LastUpdatedOn != OLD.LastUpdatedOn THEN
  INSERT into DigitalActivity (ActorId, Detail)
  VALUES (New.ActorId, CONCAT('LastUpdate value for ',NEW.AssetType,
         ' is modified from ',OLD.LastUpdatedOn, ' to ',
         NEW.LastUpdatedOn));
  END IF;

  END **

  DELIMITER ;

  UPDATE DigitalAssets
  SET LastUpdatedOn = '2020-02-15 22:10:45'
  WHERE ActorID = 2 AND Assettype = 'Website';
  > Query OK, 1 row affected (0.01 sec)
    Rows matched: 1  Changed: 1  Warnings: 0

  UPDATE DigitalAssets
  SET LastUpdatedOn = '2018-01-15 22:10:45'
  WHERE ActorID = 5 AND AssetType = 'Pinterest';
  > ERROR 1644 (45000): The new value of LastUpatedOn column: 2018-01-15 22:10:45 cannot be less than the current value: 2019-06-09 09:14:20

  SELECT * FROM DigitalActivity;
    > (First update attempt recorded, second is not)

  // AFTER UPDATE
  // Whenver row updated, log activity in ActorsLog

  DELIMITER **

  CREATE TRIGGER AfterActorUpdate
  AFTER UPDATE ON Actors
  FOR EACH ROW
  BEGIN
  DECLARE TotalWorth, RowsCount INT;

  INSERT INTO ActorsLog
  SET ActorId = NEW.Id, FirstName = New.FirstName, LastName =  NEW.SecondName, DateTime = NOW(), Event = 'UPDATE';

  IF NEW.NetWorthInMillions != OLD.NetWorthInMillions THEN

  SELECT SUM(NetWorthInMillions) INTO TotalWorth
   FROM Actors;

   SELECT COUNT(*) INTO RowsCount
   FROM Actors;

   UPDATE NetWorthStats
   SET AverageNetWorth = ((Totalworth) / (RowsCount));
  END IF;
  END **

  DELIMITER ;

  SELECT * FROM NetWorthStats;

  UPDATE Actors
  SET NetWorthInMillions = '100'
  WHERE Id = 5;

  SELECT * FROM NetWorthStats;
  SELECT * FROM ActorsLog;
    > Both updated

  UPDATE Actors
  SET MaritalStatus = 'Single'
  WHERE Id = 7;

  SELECT * FROM NetWorthStats;
  SELECT * FROM ActorsLog;
    > No change in NetWorthStats, but new entry in ActorsLog
  