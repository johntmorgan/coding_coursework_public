Variables
  Data object with name associated to it
  Store user-defined temporary value
    Can be referred to in subsequent statements
  Must declare before using
    DECLARE data name, optional default value
    If DEFAULT not used, then NULL value
  Assign a value via SET keyword
    Or SELECT INTO
  Scope defines lifetime after which unavailable
    Scope is local meaning not accessible after END of stored procedure
    Inside stored procedure, scope depends on where declared
    Multiple variables with same name possible in procedure if in different scopes
  DECLARE
    Must use in procedure, function, or trigger or you get a syntax error

  // Let's store the average net worth of all actors in Actors table
  // Create variable AvgNetWorth
  DECLARE AvgNetWorth DEC(6,2) DEFAULT 0.0;

  // This declares average net worth of decimal type, default 0.0
    6 digits long, decimal with 2 digits

  // Create more than one variable in a single DECLARE statement if same data type
  DECLARE TotalM, TotalF INT DEFAULT 0;

  // Set values after declaring
  SET TotalM = 6;
  SET TotalF = 4;

  // Or set values by using SELECT INTO
  SELECT AVG(NetWorthInMillions) INTO AvgNetWorth FROM Actors;


  DELIMITER **
  CREATE PROCEDURE Summary()
  BEGIN
    DECLARE TotalM, TotalF INT DEFAULT 0;
    DECLARE AvgNetWorth DEC(6,2) DEFAULT 0.0;

    SELECT COUNT(*) INTO TotalM
    FROM Actors
    WHERE Gender = 'Male';

    SELECT COUNT(*) INTO TotalF
    FROM Actors
    WHERE Gender = 'Female';

    SELECT AVG(NetWorthInMillions) INTO AvgNetWorth
    FROM Actors;

    SELECT TotalM, TotalF, AvgNetWorth;
  END**
  DELIMITER ;

  CALL Summary();
    > +--------+--------+-------------+
      | TotalM | TotalF | AvgNetWorth |
      +--------+--------+-------------+
      |      5 |      6 |      346.18 |
      +--------+--------+-------------+